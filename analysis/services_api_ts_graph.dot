digraph FileAnalysis {
  rankdir=LR;
  node [shape=box, style=filled, fillcolor=lightblue];

  "setParameterService" [fillcolor=lightblue];
  "getParameterValue" [fillcolor=lightblue];
  "getFallbackParameterValue" [fillcolor=lightblue];
  "setFallbackEnabled" [fillcolor=lightblue];
  "testConnection" [fillcolor=lightblue];
  "getApiStats" [fillcolor=lightblue];
  "getApiUrl" [fillcolor=lightblue];
  "testBasicAuth" [fillcolor=lightblue];
  "getPartParameters" [fillcolor=lightblue];
  "testBasicAuthWithEndpoint" [fillcolor=lightblue];
  "testConnectionExactFormat" [fillcolor=lightblue];
  "testParameterAPI" [fillcolor=lightblue];
  "destroy" [fillcolor=lightblue];
  "logApiStats" [fillcolor=lightblue];
  "updateParameterDirectly" [fillcolor=lightblue];
  "getPerformanceStats" [fillcolor=lightblue];
  "getLastKnownParameterValue" [fillcolor=lightblue];
  "updateLastKnownParameterValue" [fillcolor=lightblue];
  "notifyParameterChanged" [fillcolor=lightblue];
  "isFallbackEnabled" [fillcolor=lightblue];
  "resetRateLimiting" [fillcolor=lightblue];
  "getParameterValue" -> "notifyParameterChanged";
  "testConnection" -> "setFallbackEnabled";
  "testConnection" -> "setFallbackEnabled";
  "testConnection" -> "setFallbackEnabled";
  "testConnection" -> "setFallbackEnabled";
  "testConnectionExactFormat" -> "testParameterAPI";
  "testParameterAPI" -> "setFallbackEnabled";
  "log" [fillcolor=lightgreen];
  "now" [fillcolor=lightgreen];
  "setTimeout" [fillcolor=lightgreen];
  "endsWith" [fillcolor=lightgreen];
  "append" [fillcolor=lightgreen];
  "fetch" [fillcolor=lightgreen];
  "error" [fillcolor=lightgreen];
  "json" [fillcolor=lightgreen];
  "round" [fillcolor=lightgreen];
  "find" [fillcolor=lightgreen];
  "toLowerCase" [fillcolor=lightgreen];
  "syncApiDataToEntityState" [fillcolor=lightgreen];
  "warn" [fillcolor=lightgreen];
  "forEach" [fillcolor=lightgreen];
  "isArray" [fillcolor=lightgreen];
  "text" [fillcolor=lightgreen];
  "btoa" [fillcolor=lightgreen];
  "startsWith" [fillcolor=lightgreen];
  "replace" [fillcolor=lightgreen];
  "slice" [fillcolor=lightgreen];
  "clearInterval" [fillcolor=lightgreen];
  "stringify" [fillcolor=lightgreen];
  "get" [fillcolor=lightgreen];
  "set" [fillcolor=lightgreen];
  "has" [fillcolor=lightgreen];
  "add" [fillcolor=lightgreen];
  "delete" [fillcolor=lightgreen];
  "dispatchEvent" [fillcolor=lightgreen];
  "getParameterValue" -> "log";
  "getParameterValue" -> "now";
  "getParameterValue" -> "log";
  "getParameterValue" -> "setTimeout";
  "getParameterValue" -> "log";
  "getParameterValue" -> "now";
  "getParameterValue" -> "now";
  "getParameterValue" -> "log";
  "getParameterValue" -> "endsWith";
  "getParameterValue" -> "log";
  "getParameterValue" -> "append";
  "getParameterValue" -> "append";
  "getParameterValue" -> "append";
  "getParameterValue" -> "fetch";
  "getParameterValue" -> "error";
  "getParameterValue" -> "json";
  "getParameterValue" -> "now";
  "getParameterValue" -> "log";
  "getParameterValue" -> "round";
  "getParameterValue" -> "find";
  "getParameterValue" -> "toLowerCase";
  "getParameterValue" -> "toLowerCase";
  "getParameterValue" -> "log";
  "getParameterValue" -> "syncApiDataToEntityState";
  "getParameterValue" -> "log";
  "getParameterValue" -> "warn";
  "getParameterValue" -> "log";
  "getParameterValue" -> "forEach";
  "getParameterValue" -> "log";
  "getParameterValue" -> "error";
  "getFallbackParameterValue" -> "log";
  "getFallbackParameterValue" -> "isArray";
  "getFallbackParameterValue" -> "find";
  "getFallbackParameterValue" -> "toLowerCase";
  "getFallbackParameterValue" -> "toLowerCase";
  "testConnection" -> "endsWith";
  "testConnection" -> "log";
  "testConnection" -> "append";
  "testConnection" -> "append";
  "testConnection" -> "append";
  "testConnection" -> "fetch";
  "testConnection" -> "log";
  "testConnection" -> "append";
  "testConnection" -> "append";
  "testConnection" -> "append";
  "testConnection" -> "endsWith";
  "testConnection" -> "fetch";
  "testConnection" -> "warn";
  "testConnection" -> "warn";
  "testConnection" -> "text";
  "testConnection" -> "warn";
  "testConnection" -> "warn";
  "testConnection" -> "warn";
  "testBasicAuth" -> "endsWith";
  "testBasicAuth" -> "log";
  "testBasicAuth" -> "btoa";
  "testBasicAuth" -> "fetch";
  "testBasicAuth" -> "log";
  "testBasicAuth" -> "log";
  "testBasicAuth" -> "error";
  "getPartParameters" -> "startsWith";
  "getPartParameters" -> "replace";
  "getPartParameters" -> "endsWith";
  "getPartParameters" -> "startsWith";
  "getPartParameters" -> "log";
  "getPartParameters" -> "fetch";
  "getPartParameters" -> "error";
  "getPartParameters" -> "json";
  "getPartParameters" -> "log";
  "getPartParameters" -> "log";
  "getPartParameters" -> "error";
  "testBasicAuthWithEndpoint" -> "endsWith";
  "testBasicAuthWithEndpoint" -> "log";
  "testBasicAuthWithEndpoint" -> "btoa";
  "testBasicAuthWithEndpoint" -> "fetch";
  "testBasicAuthWithEndpoint" -> "log";
  "testBasicAuthWithEndpoint" -> "json";
  "testBasicAuthWithEndpoint" -> "log";
  "testBasicAuthWithEndpoint" -> "error";
  "testConnectionExactFormat" -> "endsWith";
  "testConnectionExactFormat" -> "slice";
  "testConnectionExactFormat" -> "log";
  "testConnectionExactFormat" -> "fetch";
  "testConnectionExactFormat" -> "json";
  "testConnectionExactFormat" -> "warn";
  "testConnectionExactFormat" -> "warn";
  "testConnectionExactFormat" -> "warn";
  "testParameterAPI" -> "endsWith";
  "testParameterAPI" -> "slice";
  "testParameterAPI" -> "log";
  "testParameterAPI" -> "fetch";
  "testParameterAPI" -> "json";
  "testParameterAPI" -> "warn";
  "testParameterAPI" -> "warn";
  "destroy" -> "clearInterval";
  "logApiStats" -> "log";
  "updateParameterDirectly" -> "endsWith";
  "updateParameterDirectly" -> "slice";
  "updateParameterDirectly" -> "log";
  "updateParameterDirectly" -> "fetch";
  "updateParameterDirectly" -> "stringify";
  "updateParameterDirectly" -> "log";
  "updateParameterDirectly" -> "error";
  "updateParameterDirectly" -> "text";
  "updateParameterDirectly" -> "error";
  "updateParameterDirectly" -> "error";
  "updateParameterDirectly" -> "error";
  "getPerformanceStats" -> "round";
  "getLastKnownParameterValue" -> "get";
  "updateLastKnownParameterValue" -> "set";
  "notifyParameterChanged" -> "has";
  "notifyParameterChanged" -> "log";
  "notifyParameterChanged" -> "add";
  "notifyParameterChanged" -> "setTimeout";
  "notifyParameterChanged" -> "delete";
  "notifyParameterChanged" -> "log";
  "notifyParameterChanged" -> "dispatchEvent";
  "notifyParameterChanged" -> "dispatchEvent";
  "resetRateLimiting" -> "log";
}
