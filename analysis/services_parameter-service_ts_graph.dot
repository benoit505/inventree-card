digraph FileAnalysis {
  rankdir=LR;
  node [shape=box, style=filled, fillcolor=lightblue];

  "get" [fillcolor=lightblue];
  "set" [fillcolor=lightblue];
  "clear" [fillcolor=lightblue];
  "getInstance" [fillcolor=lightblue];
  "initialize" [fillcolor=lightblue];
  "matchesConditionSyncVersion" [fillcolor=lightblue];
  "processConditions" [fillcolor=lightblue];
  "matchesConditionAsync" [fillcolor=lightblue];
  "checkCrossEntityCondition" [fillcolor=lightblue];
  "checkCrossEntityConditionSync" [fillcolor=lightblue];
  "matchesCondition" [fillcolor=lightblue];
  "checkCrossEntityConditionWithPart" [fillcolor=lightblue];
  "matchesLocalCondition" [fillcolor=lightblue];
  "getParameterValueDirectly" [fillcolor=lightblue];
  "setFallbackState" [fillcolor=lightblue];
  "diagnosticDump" [fillcolor=lightblue];
  "diagnoseCrossEntityCondition" [fillcolor=lightblue];
  "clearParameterCache" [fillcolor=lightblue];
  "getApiStats" [fillcolor=lightblue];
  "markParameterChanged" [fillcolor=lightblue];
  "wasRecentlyChanged" [fillcolor=lightblue];
  "syncApiDataToEntityState" [fillcolor=lightblue];
  "findEntityForPart" [fillcolor=lightblue];
  "runDiagnostics" [fillcolor=lightblue];
  "setDirectApi" [fillcolor=lightblue];
  "fetchParameterData" [fillcolor=lightblue];
  "clearCache" [fillcolor=lightblue];
  "applyAction" [fillcolor=lightblue];
  "getActionButtons" [fillcolor=lightblue];
  "shouldShowPart" [fillcolor=lightblue];
  "compareFilterValues" [fillcolor=lightblue];
  "updateParameter" [fillcolor=lightblue];
  "hasInstance" [fillcolor=lightblue];
  "isDirectPartReference" [fillcolor=lightblue];
  "getParameterValue" [fillcolor=lightblue];
  "getParameterValueWithDirectReference" [fillcolor=lightblue];
  "getParameterValueFromPart" [fillcolor=lightblue];
  "checkValueMatch" [fillcolor=lightblue];
  "compareValues" [fillcolor=lightblue];
  "getParameterFromEntity" [fillcolor=lightblue];
  "isApiConnected" [fillcolor=lightblue];
  "updateHass" [fillcolor=lightblue];
  "setStrictWebSocketMode" [fillcolor=lightblue];
  "markAsWebSocketCall" [fillcolor=lightblue];
  "clearWebSocketCallMark" [fillcolor=lightblue];
  "isWebSocketCall" [fillcolor=lightblue];
  "findParameterInAllEntities" [fillcolor=lightblue];
  "findParameterInWebSocketData" [fillcolor=lightblue];
  "findParameterInApiData" [fillcolor=lightblue];
  "findParameterInHassData" [fillcolor=lightblue];
  "get" -> "get";
  "set" -> "set";
  "clear" -> "clear";
  "matchesConditionSyncVersion" -> "matchesLocalCondition";
  "processConditions" -> "matchesConditionSyncVersion";
  "processConditions" -> "applyAction";
  "matchesConditionAsync" -> "isDirectPartReference";
  "matchesConditionAsync" -> "getParameterValue";
  "matchesConditionAsync" -> "getParameterValue";
  "matchesConditionAsync" -> "matchesLocalCondition";
  "matchesConditionAsync" -> "compareValues";
  "checkCrossEntityCondition" -> "get";
  "checkCrossEntityCondition" -> "set";
  "checkCrossEntityCondition" -> "get";
  "checkCrossEntityCondition" -> "set";
  "checkCrossEntityCondition" -> "set";
  "checkCrossEntityCondition" -> "set";
  "checkCrossEntityCondition" -> "set";
  "checkCrossEntityConditionSync" -> "compareValues";
  "matchesCondition" -> "get";
  "matchesCondition" -> "isDirectPartReference";
  "matchesCondition" -> "getParameterValueWithDirectReference";
  "matchesCondition" -> "getParameterValueFromPart";
  "matchesCondition" -> "checkValueMatch";
  "matchesCondition" -> "set";
  "checkCrossEntityConditionWithPart" -> "getParameterFromEntity";
  "matchesLocalCondition" -> "getInstance";
  "matchesLocalCondition" -> "findEntityForPart";
  "matchesLocalCondition" -> "getParameterValue";
  "matchesLocalCondition" -> "compareValues";
  "matchesLocalCondition" -> "compareValues";
  "getParameterValueDirectly" -> "getParameterValue";
  "diagnosticDump" -> "getApiStats";
  "diagnosticDump" -> "getInstance";
  "diagnoseCrossEntityCondition" -> "compareValues";
  "getApiStats" -> "getApiStats";
  "syncApiDataToEntityState" -> "findEntityForPart";
  "findEntityForPart" -> "getInstance";
  "runDiagnostics" -> "isApiConnected";
  "runDiagnostics" -> "getApiStats";
  "runDiagnostics" -> "getInstance";
  "fetchParameterData" -> "getParameterValue";
  "fetchParameterData" -> "syncApiDataToEntityState";
  "clearCache" -> "clear";
  "clearCache" -> "clear";
  "clearCache" -> "clear";
  "clearCache" -> "clear";
  "shouldShowPart" -> "getParameterValueFromPart";
  "shouldShowPart" -> "compareFilterValues";
  "updateParameter" -> "findEntityForPart";
  "updateParameter" -> "syncApiDataToEntityState";
  "getParameterValue" -> "findParameterInWebSocketData";
  "getParameterValue" -> "findParameterInApiData";
  "getParameterValue" -> "findParameterInHassData";
  "getParameterValueWithDirectReference" -> "isDirectPartReference";
  "getParameterValueWithDirectReference" -> "findParameterInAllEntities";
  "getParameterFromEntity" -> "findParameterInAllEntities";
  "getParameterFromEntity" -> "findParameterInAllEntities";
  "findParameterInAllEntities" -> "getInstance";
  "findParameterInAllEntities" -> "findEntityForPart";
  "findParameterInAllEntities" -> "getParameterValueDirectly";
  "now" [fillcolor=lightgreen];
  "delete" [fillcolor=lightgreen];
  "log" [fillcolor=lightgreen];
  "includes" [fillcolor=lightgreen];
  "split" [fillcolor=lightgreen];
  "find" [fillcolor=lightgreen];
  "toLowerCase" [fillcolor=lightgreen];
  "String" [fillcolor=lightgreen];
  "Number" [fillcolor=lightgreen];
  "error" [fillcolor=lightgreen];
  "warn" [fillcolor=lightgreen];
  "setTimeout" [fillcolor=lightgreen];
  "resolve" [fillcolor=lightgreen];
  "race" [fillcolor=lightgreen];
  "setFallbackEnabled" [fillcolor=lightgreen];
  "isFallbackEnabled" [fillcolor=lightgreen];
  "getPerformanceStats" [fillcolor=lightgreen];
  "getTrackedEntities" [fillcolor=lightgreen];
  "join" [fillcolor=lightgreen];
  "getNewestData" [fillcolor=lightgreen];
  "forEach" [fillcolor=lightgreen];
  "isArray" [fillcolor=lightgreen];
  "add" [fillcolor=lightgreen];
  "has" [fillcolor=lightgreen];
  "dispatchEvent" [fillcolor=lightgreen];
  "setParameterService" [fillcolor=lightgreen];
  "finally" [fillcolor=lightgreen];
  "catch" [fillcolor=lightgreen];
  "then" [fillcolor=lightgreen];
  "map" [fillcolor=lightgreen];
  "startsWith" [fillcolor=lightgreen];
  "substring" [fillcolor=lightgreen];
  "parseInt" [fillcolor=lightgreen];
  "isNaN" [fillcolor=lightgreen];
  "getWebSocketData" [fillcolor=lightgreen];
  "getApiData" [fillcolor=lightgreen];
  "getHassData" [fillcolor=lightgreen];
  "get" -> "now";
  "get" -> "delete";
  "set" -> "now";
  "initialize" -> "log";
  "matchesConditionAsync" -> "includes";
  "checkCrossEntityCondition" -> "now";
  "checkCrossEntityCondition" -> "includes";
  "checkCrossEntityCondition" -> "split";
  "checkCrossEntityCondition" -> "find";
  "checkCrossEntityCondition" -> "toLowerCase";
  "checkCrossEntityCondition" -> "toLowerCase";
  "checkCrossEntityCondition" -> "now";
  "checkCrossEntityCondition" -> "now";
  "checkCrossEntityCondition" -> "now";
  "checkCrossEntityCondition" -> "toLowerCase";
  "checkCrossEntityCondition" -> "String";
  "checkCrossEntityCondition" -> "toLowerCase";
  "checkCrossEntityCondition" -> "includes";
  "checkCrossEntityCondition" -> "Number";
  "checkCrossEntityCondition" -> "Number";
  "checkCrossEntityCondition" -> "Number";
  "checkCrossEntityCondition" -> "Number";
  "checkCrossEntityCondition" -> "now";
  "checkCrossEntityCondition" -> "error";
  "checkCrossEntityConditionSync" -> "log";
  "checkCrossEntityConditionSync" -> "split";
  "checkCrossEntityConditionSync" -> "log";
  "checkCrossEntityConditionSync" -> "find";
  "checkCrossEntityConditionSync" -> "toLowerCase";
  "checkCrossEntityConditionSync" -> "toLowerCase";
  "checkCrossEntityConditionSync" -> "log";
  "checkCrossEntityConditionSync" -> "error";
  "matchesCondition" -> "log";
  "matchesCondition" -> "error";
  "checkCrossEntityConditionWithPart" -> "includes";
  "checkCrossEntityConditionWithPart" -> "split";
  "checkCrossEntityConditionWithPart" -> "toLowerCase";
  "checkCrossEntityConditionWithPart" -> "String";
  "checkCrossEntityConditionWithPart" -> "toLowerCase";
  "checkCrossEntityConditionWithPart" -> "includes";
  "checkCrossEntityConditionWithPart" -> "Number";
  "checkCrossEntityConditionWithPart" -> "Number";
  "checkCrossEntityConditionWithPart" -> "Number";
  "checkCrossEntityConditionWithPart" -> "Number";
  "checkCrossEntityConditionWithPart" -> "error";
  "matchesLocalCondition" -> "log";
  "matchesLocalCondition" -> "log";
  "matchesLocalCondition" -> "log";
  "matchesLocalCondition" -> "find";
  "matchesLocalCondition" -> "toLowerCase";
  "matchesLocalCondition" -> "toLowerCase";
  "matchesLocalCondition" -> "log";
  "matchesLocalCondition" -> "log";
  "getParameterValueDirectly" -> "warn";
  "getParameterValueDirectly" -> "log";
  "getParameterValueDirectly" -> "setTimeout";
  "getParameterValueDirectly" -> "resolve";
  "getParameterValueDirectly" -> "race";
  "getParameterValueDirectly" -> "error";
  "setFallbackState" -> "setFallbackEnabled";
  "setFallbackState" -> "log";
  "setFallbackState" -> "warn";
  "diagnosticDump" -> "log";
  "diagnosticDump" -> "log";
  "diagnosticDump" -> "log";
  "diagnosticDump" -> "log";
  "diagnosticDump" -> "isFallbackEnabled";
  "diagnosticDump" -> "getPerformanceStats";
  "diagnosticDump" -> "log";
  "diagnosticDump" -> "log";
  "diagnosticDump" -> "log";
  "diagnosticDump" -> "log";
  "diagnosticDump" -> "log";
  "diagnosticDump" -> "log";
  "diagnosticDump" -> "log";
  "diagnosticDump" -> "log";
  "diagnosticDump" -> "getTrackedEntities";
  "diagnosticDump" -> "log";
  "diagnosticDump" -> "join";
  "diagnosticDump" -> "getNewestData";
  "diagnosticDump" -> "forEach";
  "diagnosticDump" -> "log";
  "diagnosticDump" -> "log";
  "diagnoseCrossEntityCondition" -> "log";
  "diagnoseCrossEntityCondition" -> "includes";
  "diagnoseCrossEntityCondition" -> "error";
  "diagnoseCrossEntityCondition" -> "split";
  "diagnoseCrossEntityCondition" -> "log";
  "diagnoseCrossEntityCondition" -> "error";
  "diagnoseCrossEntityCondition" -> "error";
  "diagnoseCrossEntityCondition" -> "log";
  "diagnoseCrossEntityCondition" -> "isArray";
  "diagnoseCrossEntityCondition" -> "error";
  "diagnoseCrossEntityCondition" -> "log";
  "diagnoseCrossEntityCondition" -> "log";
  "diagnoseCrossEntityCondition" -> "find";
  "diagnoseCrossEntityCondition" -> "toLowerCase";
  "diagnoseCrossEntityCondition" -> "toLowerCase";
  "diagnoseCrossEntityCondition" -> "log";
  "diagnoseCrossEntityCondition" -> "log";
  "diagnoseCrossEntityCondition" -> "log";
  "clearParameterCache" -> "delete";
  "clearParameterCache" -> "log";
  "markParameterChanged" -> "add";
  "markParameterChanged" -> "setTimeout";
  "markParameterChanged" -> "delete";
  "wasRecentlyChanged" -> "has";
  "syncApiDataToEntityState" -> "warn";
  "syncApiDataToEntityState" -> "log";
  "syncApiDataToEntityState" -> "dispatchEvent";
  "findEntityForPart" -> "getTrackedEntities";
  "runDiagnostics" -> "log";
  "runDiagnostics" -> "log";
  "runDiagnostics" -> "log";
  "runDiagnostics" -> "log";
  "runDiagnostics" -> "log";
  "runDiagnostics" -> "log";
  "runDiagnostics" -> "log";
  "runDiagnostics" -> "log";
  "runDiagnostics" -> "log";
  "runDiagnostics" -> "getTrackedEntities";
  "runDiagnostics" -> "log";
  "runDiagnostics" -> "log";
  "setDirectApi" -> "log";
  "setDirectApi" -> "log";
  "setDirectApi" -> "setParameterService";
  "setDirectApi" -> "log";
  "setDirectApi" -> "warn";
  "fetchParameterData" -> "warn";
  "fetchParameterData" -> "warn";
  "fetchParameterData" -> "has";
  "fetchParameterData" -> "log";
  "fetchParameterData" -> "add";
  "fetchParameterData" -> "log";
  "fetchParameterData" -> "finally";
  "fetchParameterData" -> "catch";
  "fetchParameterData" -> "then";
  "fetchParameterData" -> "log";
  "fetchParameterData" -> "warn";
  "fetchParameterData" -> "error";
  "fetchParameterData" -> "delete";
  "fetchParameterData" -> "error";
  "fetchParameterData" -> "delete";
  "clearCache" -> "log";
  "applyAction" -> "warn";
  "getActionButtons" -> "isArray";
  "getActionButtons" -> "map";
  "shouldShowPart" -> "includes";
  "shouldShowPart" -> "split";
  "compareFilterValues" -> "toLowerCase";
  "compareFilterValues" -> "String";
  "compareFilterValues" -> "toLowerCase";
  "compareFilterValues" -> "includes";
  "compareFilterValues" -> "Number";
  "compareFilterValues" -> "Number";
  "compareFilterValues" -> "Number";
  "compareFilterValues" -> "Number";
  "updateParameter" -> "error";
  "updateParameter" -> "resolve";
  "updateParameter" -> "log";
  "updateParameter" -> "resolve";
  "updateParameter" -> "resolve";
  "updateParameter" -> "resolve";
  "isDirectPartReference" -> "startsWith";
  "isDirectPartReference" -> "includes";
  "isDirectPartReference" -> "substring";
  "getParameterValue" -> "includes";
  "getParameterValue" -> "warn";
  "getParameterValue" -> "split";
  "getParameterValue" -> "log";
  "getParameterValue" -> "log";
  "getParameterValue" -> "log";
  "getParameterValue" -> "warn";
  "getParameterValueWithDirectReference" -> "warn";
  "getParameterValueWithDirectReference" -> "split";
  "getParameterValueWithDirectReference" -> "parseInt";
  "getParameterValueWithDirectReference" -> "isNaN";
  "getParameterValueWithDirectReference" -> "warn";
  "getParameterValueWithDirectReference" -> "error";
  "getParameterFromEntity" -> "log";
  "getParameterFromEntity" -> "includes";
  "getParameterFromEntity" -> "split";
  "getParameterFromEntity" -> "parseInt";
  "getParameterFromEntity" -> "error";
  "getParameterFromEntity" -> "warn";
  "getParameterFromEntity" -> "warn";
  "getParameterFromEntity" -> "find";
  "getParameterFromEntity" -> "toLowerCase";
  "getParameterFromEntity" -> "toLowerCase";
  "getParameterFromEntity" -> "log";
  "getParameterFromEntity" -> "warn";
  "getParameterFromEntity" -> "error";
  "setStrictWebSocketMode" -> "log";
  "markAsWebSocketCall" -> "log";
  "clearWebSocketCallMark" -> "log";
  "findParameterInAllEntities" -> "log";
  "findParameterInAllEntities" -> "getWebSocketData";
  "findParameterInAllEntities" -> "find";
  "findParameterInAllEntities" -> "find";
  "findParameterInAllEntities" -> "toLowerCase";
  "findParameterInAllEntities" -> "toLowerCase";
  "findParameterInAllEntities" -> "log";
  "findParameterInAllEntities" -> "getApiData";
  "findParameterInAllEntities" -> "find";
  "findParameterInAllEntities" -> "find";
  "findParameterInAllEntities" -> "toLowerCase";
  "findParameterInAllEntities" -> "toLowerCase";
  "findParameterInAllEntities" -> "log";
  "findParameterInAllEntities" -> "getHassData";
  "findParameterInAllEntities" -> "find";
  "findParameterInAllEntities" -> "find";
  "findParameterInAllEntities" -> "toLowerCase";
  "findParameterInAllEntities" -> "toLowerCase";
  "findParameterInAllEntities" -> "log";
  "findParameterInAllEntities" -> "log";
  "findParameterInAllEntities" -> "log";
  "findParameterInAllEntities" -> "error";
  "findParameterInAllEntities" -> "getTrackedEntities";
  "findParameterInAllEntities" -> "find";
  "findParameterInAllEntities" -> "toLowerCase";
  "findParameterInAllEntities" -> "toLowerCase";
  "findParameterInAllEntities" -> "log";
  "findParameterInAllEntities" -> "error";
  "findParameterInAllEntities" -> "warn";
  "findParameterInWebSocketData" -> "log";
  "findParameterInWebSocketData" -> "find";
  "findParameterInWebSocketData" -> "log";
  "findParameterInWebSocketData" -> "log";
  "findParameterInWebSocketData" -> "log";
  "findParameterInApiData" -> "log";
  "findParameterInApiData" -> "find";
  "findParameterInApiData" -> "log";
  "findParameterInApiData" -> "log";
  "findParameterInApiData" -> "log";
  "findParameterInHassData" -> "log";
  "findParameterInHassData" -> "log";
  "findParameterInHassData" -> "log";
  "findParameterInHassData" -> "log";
}
