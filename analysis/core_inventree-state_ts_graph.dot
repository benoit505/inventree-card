digraph FileAnalysis {
  rankdir=LR;
  node [shape=box, style=filled, fillcolor=lightblue];

  "getInstance" [fillcolor=lightblue];
  "setPriorityDataSource" [fillcolor=lightblue];
  "trackLastUpdate" [fillcolor=lightblue];
  "getLastUpdate" [fillcolor=lightblue];
  "setWebSocketData" [fillcolor=lightblue];
  "setApiData" [fillcolor=lightblue];
  "setHassData" [fillcolor=lightblue];
  "registerEntityOfInterest" [fillcolor=lightblue];
  "setHass" [fillcolor=lightblue];
  "getWebSocketData" [fillcolor=lightblue];
  "getApiData" [fillcolor=lightblue];
  "getHassData" [fillcolor=lightblue];
  "getNewestData" [fillcolor=lightblue];
  "updateParameter" [fillcolor=lightblue];
  "updateParameterInSource" [fillcolor=lightblue];
  "_updateParameterCache" [fillcolor=lightgrey];
  "getParameterValue" [fillcolor=lightblue];
  "findEntityForPart" [fillcolor=lightblue];
  "clearCache" [fillcolor=lightblue];
  "_repopulateParametersFromHass" [fillcolor=lightgrey];
  "unregisterEntityOfInterest" [fillcolor=lightblue];
  "getTrackedEntities" [fillcolor=lightblue];
  "triggerRefresh" [fillcolor=lightblue];
  "getParameterValueFromPart" [fillcolor=lightblue];
  "isDirectPartReference" [fillcolor=lightblue];
  "getParameterValueWithDirectReference" [fillcolor=lightblue];
  "_findPartById" [fillcolor=lightgrey];
  "findParameterInAllEntities" [fillcolor=lightblue];
  "findParameterInWebSocketData" [fillcolor=lightblue];
  "findParameterInApiData" [fillcolor=lightblue];
  "findParameterInHassData" [fillcolor=lightblue];
  "storeOrphanedParameter" [fillcolor=lightblue];
  "isOrphanedPart" [fillcolor=lightblue];
  "getOrphanedPartIds" [fillcolor=lightblue];
  "getOrphanedPartParameters" [fillcolor=lightblue];
  "getFilteredParts" [fillcolor=lightblue];
  "getActionButtons" [fillcolor=lightblue];
  "isInitialDataLoaded" [fillcolor=lightblue];
  "markInitialDataLoaded" [fillcolor=lightblue];
  "setPriorityDataSource" -> "triggerRefresh";
  "setWebSocketData" -> "trackLastUpdate";
  "setApiData" -> "trackLastUpdate";
  "setHassData" -> "trackLastUpdate";
  "setHass" -> "setHassData";
  "setHass" -> "markInitialDataLoaded";
  "setHass" -> "trackLastUpdate";
  "getNewestData" -> "isInitialDataLoaded";
  "getNewestData" -> "getHassData";
  "getNewestData" -> "markInitialDataLoaded";
  "getNewestData" -> "getWebSocketData";
  "getNewestData" -> "getApiData";
  "getNewestData" -> "getHassData";
  "getNewestData" -> "getApiData";
  "getNewestData" -> "getWebSocketData";
  "getNewestData" -> "getHassData";
  "getNewestData" -> "getHassData";
  "getNewestData" -> "getWebSocketData";
  "getNewestData" -> "getApiData";
  "updateParameter" -> "updateParameterInSource";
  "updateParameter" -> "updateParameterInSource";
  "updateParameter" -> "updateParameterInSource";
  "updateParameter" -> "_updateParameterCache";
  "clearCache" -> "_repopulateParametersFromHass";
  "_repopulateParametersFromHass" -> "markInitialDataLoaded";
  "_repopulateParametersFromHass" -> "getHassData";
  "_repopulateParametersFromHass" -> "_updateParameterCache";
  "_repopulateParametersFromHass" -> "trackLastUpdate";
  "getParameterValueWithDirectReference" -> "isDirectPartReference";
  "getParameterValueWithDirectReference" -> "_findPartById";
  "getParameterValueWithDirectReference" -> "getParameterValueFromPart";
  "_findPartById" -> "getTrackedEntities";
  "_findPartById" -> "getNewestData";
  "findParameterInAllEntities" -> "findEntityForPart";
  "findParameterInAllEntities" -> "getParameterValue";
  "findParameterInAllEntities" -> "findParameterInWebSocketData";
  "findParameterInAllEntities" -> "findParameterInApiData";
  "findParameterInAllEntities" -> "findParameterInHassData";
  "findParameterInWebSocketData" -> "getParameterValueFromPart";
  "findParameterInApiData" -> "getParameterValueFromPart";
  "findParameterInHassData" -> "getParameterValueFromPart";
  "findParameterInHassData" -> "getParameterValueFromPart";
  "isOrphanedPart" -> "findEntityForPart";
  "getFilteredParts" -> "getNewestData";
  "getActionButtons" -> "getParameterValueFromPart";
  "log" [fillcolor=lightgreen];
  "now" [fillcolor=lightgreen];
  "set" [fillcolor=lightgreen];
  "get" [fillcolor=lightgreen];
  "map" [fillcolor=lightgreen];
  "add" [fillcolor=lightgreen];
  "error" [fillcolor=lightgreen];
  "entries" [fillcolor=lightgreen];
  "find" [fillcolor=lightgreen];
  "has" [fillcolor=lightgreen];
  "dispatchEvent" [fillcolor=lightgreen];
  "toLowerCase" [fillcolor=lightgreen];
  "some" [fillcolor=lightgreen];
  "keys" [fillcolor=lightgreen];
  "startsWith" [fillcolor=lightgreen];
  "clear" [fillcolor=lightgreen];
  "from" [fillcolor=lightgreen];
  "delete" [fillcolor=lightgreen];
  "isArray" [fillcolor=lightgreen];
  "includes" [fillcolor=lightgreen];
  "substring" [fillcolor=lightgreen];
  "split" [fillcolor=lightgreen];
  "parseInt" [fillcolor=lightgreen];
  "isNaN" [fillcolor=lightgreen];
  "String" [fillcolor=lightgreen];
  "filter" [fillcolor=lightgreen];
  "Number" [fillcolor=lightgreen];
  "setPriorityDataSource" -> "log";
  "trackLastUpdate" -> "now";
  "trackLastUpdate" -> "set";
  "trackLastUpdate" -> "log";
  "getLastUpdate" -> "get";
  "setWebSocketData" -> "map";
  "setWebSocketData" -> "set";
  "setWebSocketData" -> "log";
  "setApiData" -> "map";
  "setApiData" -> "set";
  "setApiData" -> "log";
  "setHassData" -> "map";
  "setHassData" -> "set";
  "setHassData" -> "log";
  "registerEntityOfInterest" -> "add";
  "registerEntityOfInterest" -> "log";
  "setHass" -> "log";
  "setHass" -> "error";
  "getWebSocketData" -> "get";
  "getApiData" -> "get";
  "getHassData" -> "get";
  "getNewestData" -> "log";
  "updateParameter" -> "entries";
  "updateParameter" -> "find";
  "updateParameter" -> "log";
  "updateParameter" -> "has";
  "updateParameter" -> "set";
  "updateParameter" -> "set";
  "updateParameter" -> "get";
  "updateParameter" -> "dispatchEvent";
  "updateParameter" -> "dispatchEvent";
  "updateParameterInSource" -> "get";
  "updateParameterInSource" -> "find";
  "updateParameterInSource" -> "find";
  "updateParameterInSource" -> "toLowerCase";
  "updateParameterInSource" -> "toLowerCase";
  "_updateParameterCache" -> "has";
  "_updateParameterCache" -> "set";
  "_updateParameterCache" -> "set";
  "_updateParameterCache" -> "get";
  "getParameterValue" -> "get";
  "getParameterValue" -> "get";
  "getParameterValue" -> "get";
  "getParameterValue" -> "get";
  "findEntityForPart" -> "get";
  "findEntityForPart" -> "get";
  "findEntityForPart" -> "get";
  "findEntityForPart" -> "some";
  "findEntityForPart" -> "some";
  "findEntityForPart" -> "some";
  "findEntityForPart" -> "get";
  "findEntityForPart" -> "keys";
  "findEntityForPart" -> "startsWith";
  "clearCache" -> "log";
  "clearCache" -> "clear";
  "clearCache" -> "clear";
  "clearCache" -> "clear";
  "clearCache" -> "clear";
  "clearCache" -> "from";
  "clearCache" -> "keys";
  "clearCache" -> "clear";
  "clearCache" -> "dispatchEvent";
  "clearCache" -> "log";
  "_repopulateParametersFromHass" -> "log";
  "unregisterEntityOfInterest" -> "delete";
  "unregisterEntityOfInterest" -> "delete";
  "unregisterEntityOfInterest" -> "delete";
  "unregisterEntityOfInterest" -> "delete";
  "unregisterEntityOfInterest" -> "log";
  "getTrackedEntities" -> "from";
  "triggerRefresh" -> "dispatchEvent";
  "getParameterValueFromPart" -> "isArray";
  "getParameterValueFromPart" -> "find";
  "getParameterValueFromPart" -> "toLowerCase";
  "getParameterValueFromPart" -> "toLowerCase";
  "isDirectPartReference" -> "startsWith";
  "isDirectPartReference" -> "includes";
  "isDirectPartReference" -> "substring";
  "getParameterValueWithDirectReference" -> "split";
  "getParameterValueWithDirectReference" -> "parseInt";
  "getParameterValueWithDirectReference" -> "isNaN";
  "_findPartById" -> "find";
  "findParameterInAllEntities" -> "get";
  "findParameterInAllEntities" -> "get";
  "findParameterInWebSocketData" -> "entries";
  "findParameterInWebSocketData" -> "find";
  "findParameterInApiData" -> "entries";
  "findParameterInApiData" -> "find";
  "findParameterInHassData" -> "entries";
  "findParameterInHassData" -> "find";
  "findParameterInHassData" -> "find";
  "storeOrphanedParameter" -> "has";
  "storeOrphanedParameter" -> "set";
  "storeOrphanedParameter" -> "set";
  "storeOrphanedParameter" -> "get";
  "storeOrphanedParameter" -> "log";
  "getOrphanedPartIds" -> "get";
  "getOrphanedPartIds" -> "keys";
  "getOrphanedPartIds" -> "split";
  "getOrphanedPartIds" -> "parseInt";
  "getOrphanedPartIds" -> "isNaN";
  "getOrphanedPartIds" -> "add";
  "getOrphanedPartIds" -> "from";
  "getOrphanedPartParameters" -> "get";
  "getOrphanedPartParameters" -> "entries";
  "getOrphanedPartParameters" -> "split";
  "getOrphanedPartParameters" -> "parseInt";
  "getActionButtons" -> "isArray";
  "getActionButtons" -> "String";
  "getActionButtons" -> "map";
  "getActionButtons" -> "filter";
  "getActionButtons" -> "toLowerCase";
  "getActionButtons" -> "String";
  "getActionButtons" -> "toLowerCase";
  "getActionButtons" -> "String";
  "getActionButtons" -> "toLowerCase";
  "getActionButtons" -> "String";
  "getActionButtons" -> "toLowerCase";
  "getActionButtons" -> "String";
  "getActionButtons" -> "toLowerCase";
  "getActionButtons" -> "String";
  "getActionButtons" -> "toLowerCase";
  "getActionButtons" -> "String";
  "getActionButtons" -> "toLowerCase";
  "getActionButtons" -> "String";
  "getActionButtons" -> "toLowerCase";
  "getActionButtons" -> "String";
  "getActionButtons" -> "includes";
  "getActionButtons" -> "Number";
  "getActionButtons" -> "Number";
  "getActionButtons" -> "Number";
  "getActionButtons" -> "Number";
  "getActionButtons" -> "log";
  "getActionButtons" -> "dispatchEvent";
  "isInitialDataLoaded" -> "get";
  "markInitialDataLoaded" -> "set";
}
